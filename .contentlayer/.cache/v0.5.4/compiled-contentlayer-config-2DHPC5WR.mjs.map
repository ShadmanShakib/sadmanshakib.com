{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, ComputedFields, makeSource } from 'contentlayer2/source-files'\r\n\r\nimport readingTime from 'reading-time'\r\n\r\nimport path from 'path'\r\nimport { fromHtmlIsomorphic } from 'hast-util-from-html-isomorphic'\r\n// Remark packages\r\nimport remarkGfm from 'remark-gfm'\r\nimport remarkMath from 'remark-math'\r\nimport { remarkAlert } from 'remark-github-blockquote-alert'\r\nimport {\r\n    remarkExtractFrontmatter,\r\n    remarkCodeTitles,\r\n    remarkImgToJsx,\r\n    extractTocHeadings,\r\n} from 'pliny/mdx-plugins/index.js'\r\n// Rehype packages\r\nimport rehypeSlug from 'rehype-slug'\r\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings'\r\nimport rehypeKatex from 'rehype-katex'\r\nimport rehypeKatexNoTranslate from 'rehype-katex-notranslate'\r\nimport rehypeCitation from 'rehype-citation'\r\nimport rehypePrismPlus from 'rehype-prism-plus'\r\nimport rehypePresetMinify from 'rehype-preset-minify'\r\n\r\nconst root = process.cwd()\r\n\r\n\r\n// heroicon mini link\r\nconst icon = fromHtmlIsomorphic(\r\n    `\r\n  <span class=\"content-header-link\">\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className=\"w-5 h-5 linkicon\">\r\n  <path d=\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\" />\r\n  <path d=\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\" />\r\n  </svg>\r\n  </span>\r\n`,\r\n    { fragment: true }\r\n)\r\n\r\nconst computedFields: ComputedFields = {\r\n    readingTime: { type: 'json', resolve: (doc) => readingTime(doc.body.raw) },\r\n    slug: {\r\n        type: 'string',\r\n        resolve: (doc) => doc._raw.flattenedPath.replace(/^.+?(\\/)/, ''),\r\n    },\r\n    path: {\r\n        type: 'string',\r\n        resolve: (doc) => doc._raw.flattenedPath,\r\n    },\r\n    filePath: {\r\n        type: 'string',\r\n        resolve: (doc) => doc._raw.sourceFilePath,\r\n    },\r\n    toc: { type: 'json', resolve: (doc) => extractTocHeadings(doc.body.raw) },\r\n}\r\n\r\n/**\r\n * Count the occurrences of all tags across blog posts and write to json file\r\n */\r\n\r\n\r\nexport const Blog = defineDocumentType(() => ({\r\n    name: 'Blog',\r\n    filePathPattern: 'blog/**/*.mdx',\r\n    contentType: 'mdx',\r\n    fields: {\r\n        title: { type: 'string', required: true },\r\n        date: { type: 'date', required: true },\r\n        tags: { type: 'list', of: { type: 'string' }, default: [] },\r\n        lastmod: { type: 'date' },\r\n        draft: { type: 'boolean' },\r\n        summary: { type: 'string' },\r\n        images: { type: 'json' },\r\n        authors: { type: 'list', of: { type: 'string' } },\r\n        layout: { type: 'string' },\r\n        bibliography: { type: 'string' },\r\n        canonicalUrl: { type: 'string' },\r\n    },\r\n    computedFields: {\r\n        ...computedFields,\r\n        structuredData: {\r\n            type: 'json',\r\n            resolve: (doc) => ({\r\n                '@context': 'https://schema.org',\r\n                '@type': 'BlogPosting',\r\n                headline: doc.title,\r\n                datePublished: doc.date,\r\n                dateModified: doc.lastmod || doc.date,\r\n                description: doc.summary,\r\n            }),\r\n        },\r\n    },\r\n}))\r\n\r\nexport const Authors = defineDocumentType(() => ({\r\n    name: 'Authors',\r\n    filePathPattern: 'authors/**/*.mdx',\r\n    contentType: 'mdx',\r\n    fields: {\r\n        name: { type: 'string', required: true },\r\n        avatar: { type: 'string' },\r\n        occupation: { type: 'string' },\r\n        company: { type: 'string' },\r\n        email: { type: 'string' },\r\n        twitter: { type: 'string' },\r\n        bluesky: { type: 'string' },\r\n        linkedin: { type: 'string' },\r\n        github: { type: 'string' },\r\n        layout: { type: 'string' },\r\n    },\r\n    computedFields,\r\n}))\r\n\r\nexport const Legal = defineDocumentType(() => ({\r\n    name: 'Legal',\r\n    filePathPattern: 'legal/**/*.mdx',\r\n    contentType: 'mdx',\r\n    fields: {\r\n        title: { type: 'string', required: true },\r\n        description: { type: 'string' },\r\n    },\r\n    computedFields,\r\n}))\r\n\r\nexport default makeSource({\r\n    contentDirPath: 'data',\r\n    documentTypes: [Blog, Authors, Legal],\r\n    mdx: {\r\n        cwd: process.cwd(),\r\n        remarkPlugins: [\r\n            remarkExtractFrontmatter,\r\n            remarkGfm,\r\n            remarkCodeTitles,\r\n            remarkMath,\r\n            remarkImgToJsx,\r\n            remarkAlert,\r\n        ],\r\n        rehypePlugins: [\r\n            rehypeSlug,\r\n            [\r\n                rehypeAutolinkHeadings,\r\n                {\r\n                    behavior: 'prepend',\r\n                    headingProperties: {\r\n                        className: ['content-header'],\r\n                    },\r\n                    content: icon,\r\n                },\r\n            ],\r\n            rehypeKatex,\r\n            rehypeKatexNoTranslate,\r\n            [rehypeCitation, { path: path.join(root, 'data') }],\r\n            [rehypePrismPlus, { defaultLanguage: 'js', ignoreMissing: true }],\r\n            rehypePresetMinify,\r\n        ],\r\n    },\r\n    onSuccess: async (importData) => {\r\n        console.log(importData)\r\n    },\r\n})"],
  "mappings": ";AAAA,SAAS,oBAAoC,kBAAkB;AAE/D,OAAO,iBAAiB;AAExB,OAAO,UAAU;AACjB,SAAS,0BAA0B;AAEnC,OAAO,eAAe;AACtB,OAAO,gBAAgB;AACvB,SAAS,mBAAmB;AAC5B;AAAA,EACI;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACG;AAEP,OAAO,gBAAgB;AACvB,OAAO,4BAA4B;AACnC,OAAO,iBAAiB;AACxB,OAAO,4BAA4B;AACnC,OAAO,oBAAoB;AAC3B,OAAO,qBAAqB;AAC5B,OAAO,wBAAwB;AAE/B,IAAM,OAAO,QAAQ,IAAI;AAIzB,IAAM,OAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,EAAE,UAAU,KAAK;AACrB;AAEA,IAAM,iBAAiC;AAAA,EACnC,aAAa,EAAE,MAAM,QAAQ,SAAS,CAAC,QAAQ,YAAY,IAAI,KAAK,GAAG,EAAE;AAAA,EACzE,MAAM;AAAA,IACF,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,QAAQ,YAAY,EAAE;AAAA,EACnE;AAAA,EACA,MAAM;AAAA,IACF,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK;AAAA,EAC/B;AAAA,EACA,UAAU;AAAA,IACN,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK;AAAA,EAC/B;AAAA,EACA,KAAK,EAAE,MAAM,QAAQ,SAAS,CAAC,QAAQ,mBAAmB,IAAI,KAAK,GAAG,EAAE;AAC5E;AAOO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC1C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,MAAM,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IACrC,MAAM,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,GAAG,SAAS,CAAC,EAAE;AAAA,IAC1D,SAAS,EAAE,MAAM,OAAO;AAAA,IACxB,OAAO,EAAE,MAAM,UAAU;AAAA,IACzB,SAAS,EAAE,MAAM,SAAS;AAAA,IAC1B,QAAQ,EAAE,MAAM,OAAO;AAAA,IACvB,SAAS,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,EAAE;AAAA,IAChD,QAAQ,EAAE,MAAM,SAAS;AAAA,IACzB,cAAc,EAAE,MAAM,SAAS;AAAA,IAC/B,cAAc,EAAE,MAAM,SAAS;AAAA,EACnC;AAAA,EACA,gBAAgB;AAAA,IACZ,GAAG;AAAA,IACH,gBAAgB;AAAA,MACZ,MAAM;AAAA,MACN,SAAS,CAAC,SAAS;AAAA,QACf,YAAY;AAAA,QACZ,SAAS;AAAA,QACT,UAAU,IAAI;AAAA,QACd,eAAe,IAAI;AAAA,QACnB,cAAc,IAAI,WAAW,IAAI;AAAA,QACjC,aAAa,IAAI;AAAA,MACrB;AAAA,IACJ;AAAA,EACJ;AACJ,EAAE;AAEK,IAAM,UAAU,mBAAmB,OAAO;AAAA,EAC7C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACvC,QAAQ,EAAE,MAAM,SAAS;AAAA,IACzB,YAAY,EAAE,MAAM,SAAS;AAAA,IAC7B,SAAS,EAAE,MAAM,SAAS;AAAA,IAC1B,OAAO,EAAE,MAAM,SAAS;AAAA,IACxB,SAAS,EAAE,MAAM,SAAS;AAAA,IAC1B,SAAS,EAAE,MAAM,SAAS;AAAA,IAC1B,UAAU,EAAE,MAAM,SAAS;AAAA,IAC3B,QAAQ,EAAE,MAAM,SAAS;AAAA,IACzB,QAAQ,EAAE,MAAM,SAAS;AAAA,EAC7B;AAAA,EACA;AACJ,EAAE;AAEK,IAAM,QAAQ,mBAAmB,OAAO;AAAA,EAC3C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,aAAa,EAAE,MAAM,SAAS;AAAA,EAClC;AAAA,EACA;AACJ,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACtB,gBAAgB;AAAA,EAChB,eAAe,CAAC,MAAM,SAAS,KAAK;AAAA,EACpC,KAAK;AAAA,IACD,KAAK,QAAQ,IAAI;AAAA,IACjB,eAAe;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,IACA,eAAe;AAAA,MACX;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,UACI,UAAU;AAAA,UACV,mBAAmB;AAAA,YACf,WAAW,CAAC,gBAAgB;AAAA,UAChC;AAAA,UACA,SAAS;AAAA,QACb;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA,CAAC,gBAAgB,EAAE,MAAM,KAAK,KAAK,MAAM,MAAM,EAAE,CAAC;AAAA,MAClD,CAAC,iBAAiB,EAAE,iBAAiB,MAAM,eAAe,KAAK,CAAC;AAAA,MAChE;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,WAAW,OAAO,eAAe;AAC7B,YAAQ,IAAI,UAAU;AAAA,EAC1B;AACJ,CAAC;",
  "names": []
}
